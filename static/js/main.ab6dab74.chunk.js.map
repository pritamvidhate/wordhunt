{"version":3,"sources":["data/category.js","component/Header/Header.js","component/Definitions/Definition.js","App.js","index.js"],"names":["categories","value","label","Header","setCategory","category","word","setWord","lightMode","darkTheme","createTheme","palette","primary","main","type","className","ThemeProvider","theme","TextField","id","onChange","e","target","select","language","map","option","MenuItem","Definition","meanings","style","backgroundColor","borderRadius","src","phonetics","audio","controls","mean","item","definitions","def","color","definition","width","example","synonyms","s","App","useState","setMeanings","setLightMode","dictionaryApi","a","axios","get","data","console","log","useEffect","DarkMode","withStyles","switchBase","grey","checked","track","Switch","height","transition","Container","maxWidth","display","flexDirection","justifyContent","position","top","right","paddingTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab6dab74.chunk.js","sourcesContent":["const categories = [\r\n  { value: \"English\", label: \"en\" },\r\n  { value: \"Hindi\", label: \"hi\" },\r\n  { value: \"Spanish\", label: \"es\" },\r\n  { value: \"French\", label: \"fr\" },\r\n  { value: \"Japanese\", label: \"ja\" },\r\n  { value: \"Russian\", label: \"ru\" },\r\n  { value: \"German\", label: \"de\" },\r\n  { value: \"Italian\", label: \"it\" },\r\n  { value: \"Korean\", label: \"ko\" },\r\n  { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\r\n  { value: \"Arabic\", label: \"ar\" },\r\n  { value: \"Turkish\", label: \"tr\" },\r\n];\r\n\r\nexport default categories;","import React from 'react';\r\nimport \"./Header.css\";\r\nimport { createTheme, MenuItem, TextField, ThemeProvider } from '@material-ui/core';\r\nimport categories from \"../../data/category\";\r\n\r\nconst Header = ({setCategory, category, word, setWord, lightMode}) => {\r\n\r\n    const darkTheme = createTheme({\r\n    palette: {\r\n        primary:{\r\n            main:lightMode ? \"#000\" : \"#fff\",\r\n        },\r\n        type:lightMode ? \"light\" : \"dark\",\r\n    },\r\n});\r\n\r\n    const handleChange = (language) =>{\r\n        setCategory(language);\r\n        setWord(\"\"); \r\n    }\r\n\r\n    return (\r\n        <div className = \"Header\">\r\n            <span className =\" title\">{ word ? word :\"Word Hunt\"}</span>\r\n            <div className=\"inputs\">\r\n            <ThemeProvider theme = {darkTheme}>\r\n                <TextField \r\n                    className=\"search\" \r\n                    id=\"standard-basic\" \r\n                    label=\"Search a word\" \r\n                    value = {word}\r\n                    onChange = {(e) => setWord(e.target.value)}\r\n                /> \r\n                <TextField\r\n                    className = \"select\"\r\n                    select\r\n                    label=\"Language\"\r\n                    value={category}\r\n                    onChange={(e) => handleChange(e.target.value)}\r\n                    >\r\n                            {categories.map((option) =>\r\n                                <MenuItem key={option.label} value={option.label}> {option.value}\r\n                                </MenuItem>\r\n                            )}\r\n                        </TextField>\r\n            </ThemeProvider>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Definition.css';\r\n\r\nconst Definition = ({word, category, meanings, lightMode}) => {\r\n    return (\r\n        <div className=\"meanings\">\r\n        \r\n                {/* Audio */}\r\n        {meanings[0] && word && category === \"en\" && (\r\n            <audio className=\"audio\"\r\n                style={{ backgroundColor: \"#fff\", borderRadius: 10 }}\r\n                src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio}\r\n                controls\r\n            >\r\n                browser does not support audio.\r\n            </audio>\r\n        )}\r\n\r\n        {word === \"\" ? (\r\n        <span className=\"subTitle\">Start by typing a word in search</span>\r\n        ) : (\r\n            meanings.map((mean) =>\r\n            mean.meanings.map((item) =>\r\n            item.definitions.map((def) => (\r\n            <div\r\n                className=\"singleMean\"\r\n                            style={{backgroundColor:lightMode ? \"#3b5360\" : \"white\", \r\n                                    color:lightMode ? \"#fff\" : \"black\"}}\r\n                        >\r\n                        <b>{def.definition}</b>\r\n                            <hr style={{backgroundColor:\"black\", width:\"100%\"}}/>\r\n                            {\r\n                                def.example && (\r\n                                    <span>\r\n                                        <b>Example:</b>\r\n                                        {def.example}\r\n                                    </span>\r\n                                )}\r\n                                <span> \r\n                                    <b>synonyms :</b>\r\n                                    {def.synonyms.map((s) => `${s}, `)}\r\n                                </span>\r\n                    </div>\r\n                ))\r\n            )\r\n        )\r\n    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Definition;\r\n","import axios from 'axios';\nimport './App.css';\nimport {useState, useEffect} from 'react';\nimport {Container, Switch, withStyles} from '@material-ui/core';\nimport Header from './component/Header/Header';\nimport Definition from './component/Definitions/Definition';\nimport { grey } from '@material-ui/core/colors';\n\nfunction App() {\n  const [word, setWord] = useState(\"\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [lightMode, setLightMode] = useState(false)\n\n  const dictionaryApi = async () =>{\n    try {\n      const data = await axios\n          .get(`https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`);  \n\n  // console.log(data);\n      setMeanings(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    dictionaryApi();\n    // eslint-disable-next-line\n  }, [word, category])\n\n  const DarkMode = withStyles({\n  switchBase: {\n    color: grey[300],\n    '&$checked': {\n      color: grey[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: grey[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\n  return (\n    <div className=\"App\" \n      style ={{height: '100vh', \n              backgroundColor:lightMode ? \"#fff\" : '#282c34',   \n              color:lightMode ? \"black\" : \"white\",\n              transition: \"all 0.3s linear\"}}>\n\n      <Container maxWidth= \"md\"\n        style = {{display : \"flex\", flexDirection: \"column\", height: \"100v\", justifyContent: \"space-evenly\"}}\n      >\n    \n      <div style ={{position:\"absolute\", top:0, right: 15, paddingTop:10 }}>\n      \n        <span>{lightMode ? \"dark\" : \"light\"}mode</span>\n      <DarkMode \n        checked ={lightMode}\n        onChange={() => setLightMode(!lightMode)}\n      />\n      </div>\n      <Header \n        category = {category} \n        setCategory = {setCategory} \n        word ={word} \n        setWord={setWord}\n        lightMode={lightMode}\n      />\n      {meanings && (\n        <Definition \n          word={word} \n          meanings={meanings} \n          lightMode={lightMode}\n          category={category}\n          />)}\n      </Container>\n    </div>\n  );\n}\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}